{"ast":null,"code":"var _jsxFileName = \"/Users/sydney/Desktop/P2T/* javascript_folder/react/projects/weatherp/src/pages/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport WeatherData from '../components/WeatherData';\nimport { getWeatherData } from '../services/WeatherService';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const persistedLocation = localStorage.getItem('searchTerm');\n  const [searchTerm, setSearchTerm] = useState(persistedLocation || 'New York');\n  // const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [city, setCity] = useState(searchTerm);\n  const history = useHistory();\n\n  // const fetchDataCallback = useCallback(async () => {\n  //   try {\n  //       setLoading(true);\n  //       const response = await getWeatherData(city);\n  //       // setWeatherData(response.data.list);\n  //       setLoading(false);\n  //       setError(false);\n  //       history.push(`/Results/${searchTerm}`);\n  //   } catch {\n  //       setError(true);\n  //       setLoading(false);\n  //   }\n  // }, [city, history]);\n  // function handleChange(event) {\n  //   setSearchTerm(event.target.value);\n  // }\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(tru);\n  };\n  useEffect(() => {\n    localStorage.setItem('searchTerm', searchTerm);\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchDataCallback();\n  }, [fetchDataCallback]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      handleSubmit: handleSubmit,\n      searchTerm: searchTerm,\n      handleChange: handleChange,\n      id: 'search-city',\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Check the weather somewhere\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There was an error coding your data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Data Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(WeatherData, {\n      list: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"dnDUl+zPP8TgC+y7O6GXoZB8yDA=\", false, function () {\n  return [useHistory];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","SearchBar","WeatherData","getWeatherData","useHistory","jsxDEV","_jsxDEV","Main","_s","persistedLocation","localStorage","getItem","searchTerm","setSearchTerm","loading","setLoading","error","setError","city","setCity","history","handleSubmit","event","preventDefault","tru","setItem","fetchDataCallback","id","className","children","handleChange","fileName","_jsxFileName","lineNumber","columnNumber","list","weatherData","_c","$RefreshReg$"],"sources":["/Users/sydney/Desktop/P2T/* javascript_folder/react/projects/weatherp/src/pages/Main.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport WeatherData from '../components/WeatherData';\nimport { getWeatherData } from '../services/WeatherService';\nimport { useHistory } from 'react-router-dom';\n\nconst Main = () => {\n  const persistedLocation = localStorage.getItem('searchTerm');\n  const [searchTerm, setSearchTerm] = useState(persistedLocation || 'New York');\n  // const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [city, setCity] = useState(searchTerm);\n  const history = useHistory();\n\n  // const fetchDataCallback = useCallback(async () => {\n  //   try {\n  //       setLoading(true);\n  //       const response = await getWeatherData(city);\n  //       // setWeatherData(response.data.list);\n  //       setLoading(false);\n  //       setError(false);\n  //       history.push(`/Results/${searchTerm}`);\n  //   } catch {\n  //       setError(true);\n  //       setLoading(false);\n  //   }\n  // }, [city, history]);\n  // function handleChange(event) {\n  //   setSearchTerm(event.target.value);\n  // }\n  const handleSubmit  = async (event) => {\n    event.preventDefault();\n    setLoading(tru)\n  }\n  useEffect(() => {\n    localStorage.setItem('searchTerm', searchTerm);\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchDataCallback();\n  }, [fetchDataCallback]);\n  return (\n    <div id='main' className='container'>\n      <SearchBar handleSubmit={handleSubmit} searchTerm={searchTerm} handleChange={handleChange} id={'search-city'}>\n      <strong>Check the weather somewhere</strong><br />\n      </SearchBar>\n      {error && <p>There was an error coding your data</p>}\n      {loading ? <p>Data Loading</p> :(\n      <WeatherData list={weatherData} />\n      )}\n    </div>\n  );\n}\n\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC5D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACW,iBAAiB,IAAI,UAAU,CAAC;EAC7E;EACA,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAACc,UAAU,CAAC;EAC5C,MAAMQ,OAAO,GAAGhB,UAAU,CAAC,CAAC;;EAE5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMiB,YAAY,GAAI,MAAOC,KAAK,IAAK;IACrCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBR,UAAU,CAACS,GAAG,CAAC;EACjB,CAAC;EACDzB,SAAS,CAAC,MAAM;IACdW,YAAY,CAACe,OAAO,CAAC,YAAY,EAAEb,UAAU,CAAC;EAChD,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAChBb,SAAS,CAAC,MAAM;IACd2B,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;EACvB,oBACEpB,OAAA;IAAKqB,EAAE,EAAC,MAAM;IAACC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAClCvB,OAAA,CAACL,SAAS;MAACoB,YAAY,EAAEA,YAAa;MAACT,UAAU,EAAEA,UAAW;MAACkB,YAAY,EAAEA,YAAa;MAACH,EAAE,EAAE,aAAc;MAAAE,QAAA,gBAC7GvB,OAAA;QAAAuB,QAAA,EAAQ;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAA5B,OAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EACXlB,KAAK,iBAAIV,OAAA;MAAAuB,QAAA,EAAG;IAAmC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACnDpB,OAAO,gBAAGR,OAAA;MAAAuB,QAAA,EAAG;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAC9B5B,OAAA,CAACJ,WAAW;MAACiC,IAAI,EAAEC;IAAY;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAA1B,EAAA,CA9CKD,IAAI;EAAA,QAOQH,UAAU;AAAA;AAAAiC,EAAA,GAPtB9B,IAAI;AAgDV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}