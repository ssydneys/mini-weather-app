{"ast":null,"code":"var _jsxFileName = \"/Users/sydney/Desktop/P2T/* javascript_folder/react/projects/weatherp/src/pages/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport WeatherData from '../components/WeatherData';\nimport { getWeatherData } from '../services/WeatherService';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const persistedLocation = localStorage.getItem('searchTerm');\n  const [searchTerm, setSearchTerm] = useState(persistedLocation || 'New York');\n  // const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [city, setCity] = useState(searchTerm);\n  const navigate = useNavigate();\n\n  // const fetchDataCallback = useCallback(async () => {\n  //   try {\n  //       setLoading(true);\n  //       const response = await getWeatherData(city);\n  //       // setWeatherData(response.data.list);\n  //       setLoading(false);\n  //       setError(false);\n  //       history.push(`/Results/${searchTerm}`);\n  //   } catch {\n  //       setError(true);\n  //       setLoading(false);\n  //   }\n  // }, [city, history]);\n  // function handleChange(event) {\n  //   setSearchTerm(event.target.value);\n  // }\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const response = await getWeatherData(searchTerm);\n      setLoading(false);\n      setError(false);\n      navigate(`/Results/${searchTerm}`);\n    } catch (error) {\n      setError(true);\n      setLoading(false);\n    }\n  };\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  useEffect(() => {\n    localStorage.setItem('searchTerm', searchTerm);\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(SearchBar, {\n      handleSubmit: handleSubmit,\n      searchTerm: searchTerm,\n      handleChange: handleChange,\n      id: 'search-city',\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Check the weather somewhere\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"cogR52wxv3K5FQx5CF9xfi2ONBU=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","SearchBar","WeatherData","getWeatherData","useNavigate","jsxDEV","_jsxDEV","Main","_s","persistedLocation","localStorage","getItem","searchTerm","setSearchTerm","loading","setLoading","error","setError","city","setCity","navigate","handleSubmit","event","preventDefault","response","handleChange","target","value","setItem","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sydney/Desktop/P2T/* javascript_folder/react/projects/weatherp/src/pages/Main.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport WeatherData from '../components/WeatherData';\nimport { getWeatherData } from '../services/WeatherService';\nimport { useNavigate } from 'react-router-dom';\n\nconst Main = () => {\n  const persistedLocation = localStorage.getItem('searchTerm');\n  const [searchTerm, setSearchTerm] = useState(persistedLocation || 'New York');\n  // const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [city, setCity] = useState(searchTerm);\n  const navigate = useNavigate();\n\n  // const fetchDataCallback = useCallback(async () => {\n  //   try {\n  //       setLoading(true);\n  //       const response = await getWeatherData(city);\n  //       // setWeatherData(response.data.list);\n  //       setLoading(false);\n  //       setError(false);\n  //       history.push(`/Results/${searchTerm}`);\n  //   } catch {\n  //       setError(true);\n  //       setLoading(false);\n  //   }\n  // }, [city, history]);\n  // function handleChange(event) {\n  //   setSearchTerm(event.target.value);\n  // }\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const response = await getWeatherData(searchTerm);\n      setLoading(false);\n      setError(false);\n      navigate(`/Results/${searchTerm}`);\n    } catch (error) {\n      setError(true);\n      setLoading(false);\n    }\n  };\n\nconst handleChange = (event) => {\n  setSearchTerm(event.target.value);\n};\n\n\n  useEffect(() => {\n    localStorage.setItem('searchTerm', searchTerm);\n  }, [searchTerm]);\n\n  return (\n    <div id='main' className='container'>\n      <SearchBar handleSubmit={handleSubmit} searchTerm={searchTerm} handleChange={handleChange} id={'search-city'}>\n      <strong>Check the weather somewhere</strong><br />\n      </SearchBar>\n      {/* {error && <p>There was an error coding your data</p>}\n      {loading ? <p>Data Loading</p> :(\n      <WeatherData list={getWeatherData} />\n      )} */}\n    </div>\n  );\n}\n\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC5D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACW,iBAAiB,IAAI,UAAU,CAAC;EAC7E;EACA,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAACc,UAAU,CAAC;EAC5C,MAAMQ,QAAQ,GAAGhB,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMiB,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBR,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMrB,cAAc,CAACS,UAAU,CAAC;MACjDG,UAAU,CAAC,KAAK,CAAC;MACjBE,QAAQ,CAAC,KAAK,CAAC;MACfG,QAAQ,CAAC,YAAYR,UAAU,EAAE,CAAC;IACpC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,QAAQ,CAAC,IAAI,CAAC;MACdF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEH,MAAMU,YAAY,GAAIH,KAAK,IAAK;IAC9BT,aAAa,CAACS,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAGC5B,SAAS,CAAC,MAAM;IACdW,YAAY,CAACkB,OAAO,CAAC,YAAY,EAAEhB,UAAU,CAAC;EAChD,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACEN,OAAA;IAAKuB,EAAE,EAAC,MAAM;IAACC,SAAS,EAAC,WAAW;IAAAC,QAAA,eAClCzB,OAAA,CAACL,SAAS;MAACoB,YAAY,EAAEA,YAAa;MAACT,UAAU,EAAEA,UAAW;MAACa,YAAY,EAAEA,YAAa;MAACI,EAAE,EAAE,aAAc;MAAAE,QAAA,gBAC7GzB,OAAA;QAAAyB,QAAA,EAAQ;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAA7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKT,CAAC;AAEV,CAAC;AAAA3B,EAAA,CA3DKD,IAAI;EAAA,QAOSH,WAAW;AAAA;AAAAgC,EAAA,GAPxB7B,IAAI;AA6DV,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}