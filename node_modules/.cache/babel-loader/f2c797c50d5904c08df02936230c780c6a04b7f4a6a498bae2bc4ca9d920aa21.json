{"ast":null,"code":"var _jsxFileName = \"/Users/sydney/Desktop/P2T/* javascript_folder/react/projects/weatherp/src/pages/Results.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation, useParams, NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  const {\n    city\n  } = useParams();\n  const location = useLocation();\n  const {\n    list\n  } = location.state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-results\",\n      children: list.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`,\n          alt: item.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"weather-short\",\n          children: item.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 71\n        }, this), \"in \", city, /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"weather-desc\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"The temperature outside is \", Math.round(item.main.temp), \"\\xB0F but it feels like it's \", Math.round(item.main.feels_like), \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"weather-rest\",\n          children: [\"Humidity is \", item.main.humidity, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 45\n          }, this), \"High is \", Math.round(item.main.temp_max), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 53\n          }, this), \"Low is \", Math.round(item.main.temp_min), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 52\n          }, this), \"Catch sunrise at at \", item.sys.sunrise, \" and sunset at \", item.sys.sunset]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/\",\n      children: \"Check another city?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"X1TSwZJoXk2tymHTLD6ZbMBP/as=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useLocation","useParams","NavLink","jsxDEV","_jsxDEV","Results","_s","city","location","list","state","className","children","map","item","index","src","weather","icon","alt","description","fileName","_jsxFileName","lineNumber","columnNumber","class","Math","round","main","temp","feels_like","humidity","temp_max","temp_min","sys","sunrise","sunset","to","_c","$RefreshReg$"],"sources":["/Users/sydney/Desktop/P2T/* javascript_folder/react/projects/weatherp/src/pages/Results.js"],"sourcesContent":["import React from 'react';\nimport { useLocation, useParams, NavLink } from 'react-router-dom';\n\nconst Results = () => {\n  const { city } = useParams();\n  const location = useLocation();\n  const { list } = location.state;\n\n  return (\n    <div className='container'>\n      <div className=\"weather-results\">\n        {list.map((item, index) => (\n          <div key={index} className=\"weather-details\">\n            <img src={`http://openweathermap.org/img/wn/${item.weather[0].icon}.png`} alt={item.weather[0].description} />\n            <p class=\"weather-short\">{item.weather[0].description}</p><br />\n            in {city}\n            <div class=\"weather-desc\">\n            <p>The temperature outside is {Math.round(item.main.temp)}°F but it feels like it's {Math.round(item.main.feels_like)}°F</p>\n            </div>\n            <div class=\"weather-rest\">\n            Humidity is {item.main.humidity}<br />\n            High is {Math.round(item.main.temp_max)}<br />\n            Low is {Math.round(item.main.temp_min)}<br />\n            Catch sunrise at at {item.sys.sunrise} and sunset at {item.sys.sunset}\n          </div>\n          </div>\n        ))}\n      </div><br />\n            <NavLink to=\"/\" >Check another city?</NavLink>\n    </div>\n  );\n}\n\nexport default Results;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}