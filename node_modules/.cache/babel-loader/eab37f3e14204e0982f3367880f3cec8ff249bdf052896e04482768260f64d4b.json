{"ast":null,"code":"var _jsxFileName = \"/Users/sydney/Desktop/P2T/* javascript_folder/react/projects/weatherp/src/pages/Results.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { getWeatherData } from '../services/WeatherService';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Results = ({\n  list\n}) => {\n  const handleClick = event => {\n    console.log(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Here is the list of the current 7-day forecast:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClick,\n        value: item.main.temperature,\n        children: \"Check my temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature is \", item.main.temp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", item.main.humidity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lowest Temperature: \", item.main.temp_min]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Highest Temperature: \", item.main.temp_max]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, item.day, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","getWeatherData","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Results","list","handleClick","event","console","log","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","className","type","onClick","main","temperature","temp","humidity","temp_min","temp_max","day","_c","$RefreshReg$"],"sources":["/Users/sydney/Desktop/P2T/* javascript_folder/react/projects/weatherp/src/pages/Results.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { getWeatherData } from '../services/WeatherService';\nimport { useParams } from 'react-router-dom'\n\n\nconst Results = ({list}) => {\n  const handleClick = (event) => {\n    console.log(event.target.value)\n  }\n  return (\n    <>\n    <p>Here is the list of the current 7-day forecast:</p>\n      {list.map((item) => (\n        <div key={item.day} className=\"weather-card\">\n          <button type='button' onClick={handleClick} value ={item.main.temperature}>Check my temperature</button>\n          <p>Temperature is {item.main.temp}</p>\n          <p>Humidity: {item.main.humidity}</p>\n          <p>Lowest Temperature: {item.main.temp_min}</p>\n          <p>Highest Temperature: {item.main.temp_max}</p>\n        </div>\n      ))}\n   </>\n  )\n}\n\nexport default Results;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG5C,MAAMC,OAAO,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAC1B,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EACD,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACAX,OAAA;MAAAW,QAAA,EAAG;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACnDX,IAAI,CAACY,GAAG,CAAEC,IAAI,iBACbjB,OAAA;MAAoBkB,SAAS,EAAC,cAAc;MAAAP,QAAA,gBAC1CX,OAAA;QAAQmB,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEf,WAAY;QAACK,KAAK,EAAGO,IAAI,CAACI,IAAI,CAACC,WAAY;QAAAX,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxGf,OAAA;QAAAW,QAAA,GAAG,iBAAe,EAACM,IAAI,CAACI,IAAI,CAACE,IAAI;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCf,OAAA;QAAAW,QAAA,GAAG,YAAU,EAACM,IAAI,CAACI,IAAI,CAACG,QAAQ;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCf,OAAA;QAAAW,QAAA,GAAG,sBAAoB,EAACM,IAAI,CAACI,IAAI,CAACI,QAAQ;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/Cf,OAAA;QAAAW,QAAA,GAAG,uBAAqB,EAACM,IAAI,CAACI,IAAI,CAACK,QAAQ;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GALxCE,IAAI,CAACU,GAAG;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMb,CACN,CAAC;EAAA,eACH,CAAC;AAEN,CAAC;AAAAa,EAAA,GAlBKzB,OAAO;AAoBb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}